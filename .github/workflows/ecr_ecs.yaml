name: CI/CD -> Amazon ECR and ECS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Run tests and build application
    runs-on: ubuntu-latest
    steps:
      - name: Clone code from GitHub repository inside GitHub actions runner
        uses: actions/checkout@v3

      - name: Set up jdk 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run tests and build jar file
        run: mvn clean install

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --platform linux/arm64 -t $ECR_REGISTRY/${{ vars.ECR_REPOSITORY_NAME }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ vars.ECR_REPOSITORY_NAME }}:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/${{ vars.ECR_REPOSITORY_NAME }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ vars.ECS_TASK_DEFINITION_FAMILY_NAME }} --query taskDefinition > task-definition.json

      - name: Update ECS task definition with new image
        id: ecs-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ vars.ECS_CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.ecs-task-definition.outputs.task-definition }}
          cluster: ${{ vars.ECS_CLUSTER_NAME }}
          service: ${{ vars.ECS_SERVICE_NAME }}
          wait-for-service-stability: true